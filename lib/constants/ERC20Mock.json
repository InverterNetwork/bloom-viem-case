{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "blockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isBlockedAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleReturnFalse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "unblockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200123638038062001236833981016040819052620000349162000123565b818160036200004483826200021c565b5060046200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610f3e80620002f86000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b2578063a457c2d711610081578063ad2bb1b311610066578063ad2bb1b314610287578063b7a40577146102c6578063dd62ed3e146102ff57600080fd5b8063a457c2d714610261578063a9059cbb1461027457600080fd5b806370a08231146101f95780637f54e41f1461022f57806395d89b41146102465780639dc29fac1461024e57600080fd5b806323b872dd116100ee57806323b872dd146101b1578063313ce567146101c457806339509351146101d357806340c10f19146101e657600080fd5b806306fdde0314610120578063095ea7b31461013e57806318160ddd14610161578063186d9d8814610173575b600080fd5b610128610345565b6040516101359190610d32565b60405180910390f35b61015161014c366004610dc7565b6103d7565b6040519015158152602001610135565b6002545b604051908152602001610135565b6101af610181366004610df1565b73ffffffffffffffffffffffffffffffffffffffff166000908152600560205260409020805460ff19169055565b005b6101516101bf366004610e0c565b6103f1565b60405160128152602001610135565b6101516101e1366004610dc7565b6104a6565b6101af6101f4366004610dc7565b6104f2565b610165610207366004610df1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101af6006805460ff19811660ff90911615179055565b610128610500565b6101af61025c366004610dc7565b61050f565b61015161026f366004610dc7565b610519565b610151610282366004610dc7565b6105db565b6101af610295366004610df1565b73ffffffffffffffffffffffffffffffffffffffff166000908152600560205260409020805460ff19166001179055565b6101516102d4366004610df1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460ff1690565b61016561030d366004610e48565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461035490610e7b565b80601f016020809104026020016040519081016040528092919081815260200182805461038090610e7b565b80156103cd5780601f106103a2576101008083540402835291602001916103cd565b820191906000526020600020905b8154815290600101906020018083116103b057829003601f168201915b5050505050905090565b6000336103e5818585610673565b60019150505b92915050565b60065460009060ff16156104075750600061049f565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090205460ff16156104825760405162461bcd60e51b815260206004820152600f60248201527f6164647265737320626c6f636b6564000000000000000000000000000000000060448201526064015b60405180910390fd5b3361048e8582856107f3565b6104998585856108b0565b60019150505b9392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906103e590829086906104ed908790610ece565b610673565b6104fc8282610ad1565b5050565b60606004805461035490610e7b565b6104fc8282610baa565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156105c35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610479565b6105d08286868403610673565b506001949350505050565b60065460009060ff16156105f1575060006103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090205460ff16156106675760405162461bcd60e51b815260206004820152600f60248201527f6164647265737320626c6f636b656400000000000000000000000000000000006044820152606401610479565b336103e58185856108b0565b73ffffffffffffffffffffffffffffffffffffffff83166106fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff82166107845760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108aa578181101561089d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610479565b6108aa8484848403610673565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166109395760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff82166109c25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a5e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108aa565b73ffffffffffffffffffffffffffffffffffffffff8216610b345760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610479565b8060026000828254610b469190610ece565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c335760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610ccf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016107e6565b600060208083528351808285015260005b81811015610d5f57858101830151858201604001528201610d43565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610dc257600080fd5b919050565b60008060408385031215610dda57600080fd5b610de383610d9e565b946020939093013593505050565b600060208284031215610e0357600080fd5b61049f82610d9e565b600080600060608486031215610e2157600080fd5b610e2a84610d9e565b9250610e3860208501610d9e565b9150604084013590509250925092565b60008060408385031215610e5b57600080fd5b610e6483610d9e565b9150610e7260208401610d9e565b90509250929050565b600181811c90821680610e8f57607f821691505b602082108103610ec8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156103eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220b0c197eb918ef392d4b69994a462e83712a185dcd77f9707ee5493c5a90e44b664736f6c63430008130033",
    "sourceMap": "117:1474:183:-:0;;;221:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;291:5;298:7;2042:5:39;:13;291:5:183;2042::39;:13;:::i;:::-;-1:-1:-1;2065:7:39;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;221:92:183;;117:1474;;14:127:196;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:196;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:196;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:196:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:196;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:196;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:196;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:196;;;3992:26;3943:89;-1:-1:-1;;2747:1:196;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:196;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:196;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:196;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:196:o;:::-;117:1474:183;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b2578063a457c2d711610081578063ad2bb1b311610066578063ad2bb1b314610287578063b7a40577146102c6578063dd62ed3e146102ff57600080fd5b8063a457c2d714610261578063a9059cbb1461027457600080fd5b806370a08231146101f95780637f54e41f1461022f57806395d89b41146102465780639dc29fac1461024e57600080fd5b806323b872dd116100ee57806323b872dd146101b1578063313ce567146101c457806339509351146101d357806340c10f19146101e657600080fd5b806306fdde0314610120578063095ea7b31461013e57806318160ddd14610161578063186d9d8814610173575b600080fd5b610128610345565b6040516101359190610d32565b60405180910390f35b61015161014c366004610dc7565b6103d7565b6040519015158152602001610135565b6002545b604051908152602001610135565b6101af610181366004610df1565b73ffffffffffffffffffffffffffffffffffffffff166000908152600560205260409020805460ff19169055565b005b6101516101bf366004610e0c565b6103f1565b60405160128152602001610135565b6101516101e1366004610dc7565b6104a6565b6101af6101f4366004610dc7565b6104f2565b610165610207366004610df1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101af6006805460ff19811660ff90911615179055565b610128610500565b6101af61025c366004610dc7565b61050f565b61015161026f366004610dc7565b610519565b610151610282366004610dc7565b6105db565b6101af610295366004610df1565b73ffffffffffffffffffffffffffffffffffffffff166000908152600560205260409020805460ff19166001179055565b6101516102d4366004610df1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460ff1690565b61016561030d366004610e48565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461035490610e7b565b80601f016020809104026020016040519081016040528092919081815260200182805461038090610e7b565b80156103cd5780601f106103a2576101008083540402835291602001916103cd565b820191906000526020600020905b8154815290600101906020018083116103b057829003601f168201915b5050505050905090565b6000336103e5818585610673565b60019150505b92915050565b60065460009060ff16156104075750600061049f565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090205460ff16156104825760405162461bcd60e51b815260206004820152600f60248201527f6164647265737320626c6f636b6564000000000000000000000000000000000060448201526064015b60405180910390fd5b3361048e8582856107f3565b6104998585856108b0565b60019150505b9392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906103e590829086906104ed908790610ece565b610673565b6104fc8282610ad1565b5050565b60606004805461035490610e7b565b6104fc8282610baa565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156105c35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610479565b6105d08286868403610673565b506001949350505050565b60065460009060ff16156105f1575060006103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090205460ff16156106675760405162461bcd60e51b815260206004820152600f60248201527f6164647265737320626c6f636b656400000000000000000000000000000000006044820152606401610479565b336103e58185856108b0565b73ffffffffffffffffffffffffffffffffffffffff83166106fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff82166107845760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108aa578181101561089d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610479565b6108aa8484848403610673565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166109395760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff82166109c25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a5e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108aa565b73ffffffffffffffffffffffffffffffffffffffff8216610b345760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610479565b8060026000828254610b469190610ece565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c335760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610ccf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610479565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016107e6565b600060208083528351808285015260005b81811015610d5f57858101830151858201604001528201610d43565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610dc257600080fd5b919050565b60008060408385031215610dda57600080fd5b610de383610d9e565b946020939093013593505050565b600060208284031215610e0357600080fd5b61049f82610d9e565b600080600060608486031215610e2157600080fd5b610e2a84610d9e565b9250610e3860208501610d9e565b9150604084013590509250925092565b60008060408385031215610e5b57600080fd5b610e6483610d9e565b9150610e7260208401610d9e565b90509250929050565b600181811c90821680610e8f57607f821691505b602082108103610ec8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156103eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220b0c197eb918ef392d4b69994a462e83712a185dcd77f9707ee5493c5a90e44b664736f6c63430008130033",
    "sourceMap": "117:1474:183:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1251:14:196;;1244:22;1226:41;;1214:2;1199:18;4431:197:39;1086:187:196;3242:106:39;3329:12;;3242:106;;;1424:25:196;;;1412:2;1397:18;3242:106:39;1278:177:196;586:92:183;;;;;;:::i;:::-;641:22;;666:5;641:22;;;:16;:22;;;;;:30;;-1:-1:-1;;641:30:183;;;586:92;;;1194:395;;;;;;:::i;:::-;;:::i;3091:91:39:-;;;3173:2;2126:36:196;;2114:2;2099:18;3091:91:39;1984:184:196;5871:234:39;;;;;;:::i;:::-;;:::i;319:78:183:-;;;;;;:::i;:::-;;:::i;3406:125:39:-;;;;;;:::i;:::-;3506:18;;3480:7;3506:18;;;;;;;;;;;;3406:125;684:79:183;;745:11;;;-1:-1:-1;;730:26:183;;745:11;;;;744:12;730:26;;;684:79;2365:102:39;;;:::i;403:82:183:-;;;;;;:::i;:::-;;:::i;6592:427:39:-;;;;;;:::i;:::-;;:::i;888:300:183:-;;;;;;:::i;:::-;;:::i;491:89::-;;;;;;:::i;:::-;544:22;;;;;;:16;:22;;;;;:29;;-1:-1:-1;;544:29:183;569:4;544:29;;;491:89;769:113;;;;;;:::i;:::-;853:22;;830:4;853:22;;;:16;:22;;;;;;;;;769:113;3974:149:39;;;;;;:::i;:::-;4089:18;;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:49;4568:32:39;719:10:49;4584:7:39;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;1194:395:183:-;1328:11;;1304:4;;1328:11;;1324:54;;;-1:-1:-1;1362:5:183;1355:12;;1324:54;853:22;;;830:4;853:22;;;:16;:22;;;;;;;;1395:21;1387:49;;;;-1:-1:-1;;;1387:49:183;;3082:2:196;1387:49:183;;;3064:21:196;3121:2;3101:18;;;3094:30;3160:17;3140:18;;;3133:45;3195:18;;1387:49:183;;;;;;;;;719:10:49;1486:38:183;1502:4;719:10:49;1517:6:183;1486:15;:38::i;:::-;1534:27;1544:4;1550:2;1554:6;1534:9;:27::i;:::-;1578:4;1571:11;;;1194:395;;;;;;:::o;5871:234:39:-;719:10:49;5959:4:39;4089:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5959:4;;719:10:49;6013:64:39;;719:10:49;;4089:27:39;;6038:38;;6066:10;;6038:38;:::i;:::-;6013:8;:64::i;319:78:183:-;374:16;380:2;384:5;374;:16::i;:::-;319:78;;:::o;2365:102:39:-;2421:13;2453:7;2446:14;;;;;:::i;403:82:183:-;460:18;466:4;472:5;460;:18::i;6592:427:39:-;719:10:49;6685:4:39;4089:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6685:4;;719:10:49;6829:15:39;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:39;;3710:2:196;6801:85:39;;;3692:21:196;3749:2;3729:18;;;3722:30;3788:34;3768:18;;;3761:62;3859:7;3839:18;;;3832:35;3884:19;;6801:85:39;3508:401:196;6801:85:39;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;-1:-1:-1;7008:4:39;;6592:427;-1:-1:-1;;;;6592:427:39:o;888:300:183:-;976:11;;956:4;;976:11;;972:54;;;-1:-1:-1;1010:5:183;1003:12;;972:54;853:22;;;830:4;853:22;;;:16;:22;;;;;;;;1043:21;1035:49;;;;-1:-1:-1;;;1035:49:183;;3082:2:196;1035:49:183;;;3064:21:196;3121:2;3101:18;;;3094:30;3160:17;3140:18;;;3133:45;3195:18;;1035:49:183;2880:339:196;1035:49:183;719:10:49;1132:28:183;719:10:49;1149:2:183;1153:6;1132:9;:28::i;10504:370:39:-;10635:19;;;10627:68;;;;-1:-1:-1;;;10627:68:39;;4116:2:196;10627:68:39;;;4098:21:196;4155:2;4135:18;;;4128:30;4194:34;4174:18;;;4167:62;4265:6;4245:18;;;4238:34;4289:19;;10627:68:39;3914:400:196;10627:68:39;10713:21;;;10705:68;;;;-1:-1:-1;;;10705:68:39;;4521:2:196;10705:68:39;;;4503:21:196;4560:2;4540:18;;;4533:30;4599:34;4579:18;;;4572:62;4670:4;4650:18;;;4643:32;4692:19;;10705:68:39;4319:398:196;10705:68:39;10784:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1424:25:196;;;10835:32:39;;1397:18:196;10835:32:39;;;;;;;;10504:370;;;:::o;11155:441::-;4089:18;;;;11285:24;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;11371:17;11351:37;;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:39;;4924:2:196;11404:68:39;;;4906:21:196;4963:2;4943:18;;;4936:30;5002:31;4982:18;;;4975:59;5051:18;;11404:68:39;4722:353:196;11404:68:39;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;7599:18;;;7591:68;;;;-1:-1:-1;;;7591:68:39;;5282:2:196;7591:68:39;;;5264:21:196;5321:2;5301:18;;;5294:30;5360:34;5340:18;;;5333:62;5431:7;5411:18;;;5404:35;5456:19;;7591:68:39;5080:401:196;7591:68:39;7677:16;;;7669:64;;;;-1:-1:-1;;;7669:64:39;;5688:2:196;7669:64:39;;;5670:21:196;5727:2;5707:18;;;5700:30;5766:34;5746:18;;;5739:62;5837:5;5817:18;;;5810:33;5860:19;;7669:64:39;5486:399:196;7669:64:39;7815:15;;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:39;;6092:2:196;7840:72:39;;;6074:21:196;6131:2;6111:18;;;6104:30;6170:34;6150:18;;;6143:62;6241:8;6221:18;;;6214:36;6267:19;;7840:72:39;5890:402:196;7840:72:39;7946:15;;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1424:25:196;;;8161:13:39;;8210:26;;1397:18:196;8210:26:39;;;;;;;8247:37;9422:659;8567:535;8650:21;;;8642:65;;;;-1:-1:-1;;;8642:65:39;;6499:2:196;8642:65:39;;;6481:21:196;6538:2;6518:18;;;6511:30;6577:33;6557:18;;;6550:61;6628:18;;8642:65:39;6297:355:196;8642:65:39;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8946:18:39;;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1424:25:196;;;8999:37:39;;1397:18:196;8999:37:39;;;;;;;319:78:183;;:::o;9422:659:39:-;9505:21;;;9497:67;;;;-1:-1:-1;;;9497:67:39;;6859:2:196;9497:67:39;;;6841:21:196;6898:2;6878:18;;;6871:30;6937:34;6917:18;;;6910:62;7008:3;6988:18;;;6981:31;7029:19;;9497:67:39;6657:397:196;9497:67:39;9660:18;;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:39;;7261:2:196;9688:71:39;;;7243:21:196;7300:2;7280:18;;;7273:30;7339:34;7319:18;;;7312:62;7410:4;7390:18;;;7383:32;7432:19;;9688:71:39;7059:398:196;9688:71:39;9793:18;;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1424:25:196;;;9793:9:39;;:18;9978:37;;1397:18:196;9978:37:39;1278:177:196;14:607;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:254::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:196:o;1460:186::-;1519:6;1572:2;1560:9;1551:7;1547:23;1543:32;1540:52;;;1588:1;1585;1578:12;1540:52;1611:29;1630:9;1611:29;:::i;1651:328::-;1728:6;1736;1744;1797:2;1785:9;1776:7;1772:23;1768:32;1765:52;;;1813:1;1810;1803:12;1765:52;1836:29;1855:9;1836:29;:::i;:::-;1826:39;;1884:38;1918:2;1907:9;1903:18;1884:38;:::i;:::-;1874:48;;1969:2;1958:9;1954:18;1941:32;1931:42;;1651:328;;;;;:::o;2173:260::-;2241:6;2249;2302:2;2290:9;2281:7;2277:23;2273:32;2270:52;;;2318:1;2315;2308:12;2270:52;2341:29;2360:9;2341:29;:::i;:::-;2331:39;;2389:38;2423:2;2412:9;2408:18;2389:38;:::i;:::-;2379:48;;2173:260;;;;;:::o;2438:437::-;2517:1;2513:12;;;;2560;;;2581:61;;2635:4;2627:6;2623:17;2613:27;;2581:61;2688:2;2680:6;2677:14;2657:18;2654:38;2651:218;;2725:77;2722:1;2715:88;2826:4;2823:1;2816:15;2854:4;2851:1;2844:15;2651:218;;2438:437;;;:::o;3224:279::-;3289:9;;;3310:10;;;3307:190;;;3353:77;3350:1;3343:88;3454:4;3451:1;3444:15;3482:4;3479:1;3472:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "blockAddress(address)": "ad2bb1b3",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "isBlockedAddress(address)": "b7a40577",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "toggleReturnFalse()": "7f54e41f",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unblockAddress(address)": "186d9d88"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"blockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBlockedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleReturnFalse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unblockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/mocks/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/utils/mocks/ERC20Mock.sol\":{\"keccak256\":\"0x28503c46ff9209880deb68f187fff5b734c063495a931db9d36fc22e74e3dfdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://043c6f5289cd2b8a9d2a7504414b7f59077b01f96eeb0e4f97cbd5a653648878\",\"dweb:/ipfs/QmaMrR4CV68A6fyQGjBu7x2xvtpMx7xu1TYS74ghYqdDHc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "blockAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBlockedAddress",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "toggleReturnFalse"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unblockAddress"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 5000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/utils/mocks/ERC20Mock.sol": "ERC20Mock"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "test/utils/mocks/ERC20Mock.sol": {
        "keccak256": "0x28503c46ff9209880deb68f187fff5b734c063495a931db9d36fc22e74e3dfdb",
        "urls": [
          "bzz-raw://043c6f5289cd2b8a9d2a7504414b7f59077b01f96eeb0e4f97cbd5a653648878",
          "dweb:/ipfs/QmaMrR4CV68A6fyQGjBu7x2xvtpMx7xu1TYS74ghYqdDHc"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/utils/mocks/ERC20Mock.sol",
    "id": 101146,
    "exportedSymbols": {
      "ERC20": [
        33602
      ],
      "ERC20Mock": [
        101145
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1550:183",
    "nodes": [
      {
        "id": 100969,
        "nodeType": "PragmaDirective",
        "src": "42:23:183",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 100971,
        "nodeType": "ImportDirective",
        "src": "67:48:183",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@oz/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101146,
        "sourceUnit": 33603,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100970,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33602,
              "src": "75:5:183",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 101145,
        "nodeType": "ContractDefinition",
        "src": "117:1474:183",
        "nodes": [
          {
            "id": 100977,
            "nodeType": "VariableDeclaration",
            "src": "151:41:183",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "blockedAddresses",
            "nameLocation": "176:16:183",
            "scope": 101145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 100976,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 100974,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "159:7:183",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "151:24:183",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 100975,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "170:4:183",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 100979,
            "nodeType": "VariableDeclaration",
            "src": "198:16:183",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "returnFalse",
            "nameLocation": "203:11:183",
            "scope": 101145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 100978,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "198:4:183",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 100991,
            "nodeType": "FunctionDefinition",
            "src": "221:92:183",
            "nodes": [],
            "body": {
              "id": 100990,
              "nodeType": "Block",
              "src": "311:2:183",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100986,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100981,
                    "src": "291:5:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 100987,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100983,
                    "src": "298:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 100988,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 100985,
                  "name": "ERC20",
                  "nameLocations": [
                    "285:5:183"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33602,
                  "src": "285:5:183"
                },
                "nodeType": "ModifierInvocation",
                "src": "285:21:183"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 100984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100981,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "247:5:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 100991,
                  "src": "233:19:183",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 100980,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "233:6:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100983,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "268:7:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 100991,
                  "src": "254:21:183",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 100982,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:6:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "232:44:183"
            },
            "returnParameters": {
              "id": 100989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "311:0:183"
            },
            "scope": 101145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101004,
            "nodeType": "FunctionDefinition",
            "src": "319:78:183",
            "nodes": [],
            "body": {
              "id": 101003,
              "nodeType": "Block",
              "src": "364:33:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100999,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100993,
                        "src": "380:2:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101000,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100995,
                        "src": "384:5:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100998,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33419,
                      "src": "374:5:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 101001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "374:16:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101002,
                  "nodeType": "ExpressionStatement",
                  "src": "374:16:183"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "328:4:183",
            "parameters": {
              "id": 100996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100993,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "341:2:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101004,
                  "src": "333:10:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100995,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "350:5:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101004,
                  "src": "345:10:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100994,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "332:24:183"
            },
            "returnParameters": {
              "id": 100997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "364:0:183"
            },
            "scope": 101145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101017,
            "nodeType": "FunctionDefinition",
            "src": "403:82:183",
            "nodes": [],
            "body": {
              "id": 101016,
              "nodeType": "Block",
              "src": "450:35:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101012,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101006,
                        "src": "466:4:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101013,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101008,
                        "src": "472:5:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101011,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33491,
                      "src": "460:5:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 101014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:18:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101015,
                  "nodeType": "ExpressionStatement",
                  "src": "460:18:183"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "412:4:183",
            "parameters": {
              "id": 101009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101006,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "425:4:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101017,
                  "src": "417:12:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101008,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "436:5:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101017,
                  "src": "431:10:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101007,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "416:26:183"
            },
            "returnParameters": {
              "id": 101010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "450:0:183"
            },
            "scope": 101145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101029,
            "nodeType": "FunctionDefinition",
            "src": "491:89:183",
            "nodes": [],
            "body": {
              "id": 101028,
              "nodeType": "Block",
              "src": "534:46:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 101026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101022,
                        "name": "blockedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100977,
                        "src": "544:16:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 101024,
                      "indexExpression": {
                        "id": 101023,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101019,
                        "src": "561:4:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "544:22:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 101025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "569:4:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "544:29:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101027,
                  "nodeType": "ExpressionStatement",
                  "src": "544:29:183"
                }
              ]
            },
            "functionSelector": "ad2bb1b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "blockAddress",
            "nameLocation": "500:12:183",
            "parameters": {
              "id": 101020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101019,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "521:4:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101029,
                  "src": "513:12:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "512:14:183"
            },
            "returnParameters": {
              "id": 101021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:0:183"
            },
            "scope": 101145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101041,
            "nodeType": "FunctionDefinition",
            "src": "586:92:183",
            "nodes": [],
            "body": {
              "id": 101040,
              "nodeType": "Block",
              "src": "631:47:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 101038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101034,
                        "name": "blockedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100977,
                        "src": "641:16:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 101036,
                      "indexExpression": {
                        "id": 101035,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101031,
                        "src": "658:4:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "641:22:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 101037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "666:5:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "641:30:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101039,
                  "nodeType": "ExpressionStatement",
                  "src": "641:30:183"
                }
              ]
            },
            "functionSelector": "186d9d88",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unblockAddress",
            "nameLocation": "595:14:183",
            "parameters": {
              "id": 101032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101031,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "618:4:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101041,
                  "src": "610:12:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:14:183"
            },
            "returnParameters": {
              "id": 101033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:0:183"
            },
            "scope": 101145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101050,
            "nodeType": "FunctionDefinition",
            "src": "684:79:183",
            "nodes": [],
            "body": {
              "id": 101049,
              "nodeType": "Block",
              "src": "720:43:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 101047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101044,
                      "name": "returnFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100979,
                      "src": "730:11:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "744:12:183",
                      "subExpression": {
                        "id": 101045,
                        "name": "returnFalse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100979,
                        "src": "745:11:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "730:26:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101048,
                  "nodeType": "ExpressionStatement",
                  "src": "730:26:183"
                }
              ]
            },
            "functionSelector": "7f54e41f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toggleReturnFalse",
            "nameLocation": "693:17:183",
            "parameters": {
              "id": 101042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:2:183"
            },
            "returnParameters": {
              "id": 101043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "720:0:183"
            },
            "scope": 101145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101062,
            "nodeType": "FunctionDefinition",
            "src": "769:113:183",
            "nodes": [],
            "body": {
              "id": 101061,
              "nodeType": "Block",
              "src": "836:46:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 101057,
                      "name": "blockedAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100977,
                      "src": "853:16:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 101059,
                    "indexExpression": {
                      "id": 101058,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101052,
                      "src": "870:4:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "853:22:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101056,
                  "id": 101060,
                  "nodeType": "Return",
                  "src": "846:29:183"
                }
              ]
            },
            "functionSelector": "b7a40577",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBlockedAddress",
            "nameLocation": "778:16:183",
            "parameters": {
              "id": 101053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101052,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "803:4:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101062,
                  "src": "795:12:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:14:183"
            },
            "returnParameters": {
              "id": 101056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101055,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101062,
                  "src": "830:4:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101054,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "829:6:183"
            },
            "scope": 101145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101099,
            "nodeType": "FunctionDefinition",
            "src": "888:300:183",
            "nodes": [],
            "body": {
              "id": 101098,
              "nodeType": "Block",
              "src": "962:226:183",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 101072,
                    "name": "returnFalse",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100979,
                    "src": "976:11:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101076,
                  "nodeType": "IfStatement",
                  "src": "972:54:183",
                  "trueBody": {
                    "id": 101075,
                    "nodeType": "Block",
                    "src": "989:37:183",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 101073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1010:5:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 101071,
                        "id": 101074,
                        "nodeType": "Return",
                        "src": "1003:12:183"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1043:21:183",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 101079,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101064,
                              "src": "1061:2:183",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 101078,
                            "name": "isBlockedAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101062,
                            "src": "1044:16:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 101080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1044:20:183",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6164647265737320626c6f636b6564",
                        "id": 101082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1066:17:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f2eedbfc461cde9be640d1c40593601ee77c41cdea7a54b33dbd332251fe518",
                          "typeString": "literal_string \"address blocked\""
                        },
                        "value": "address blocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f2eedbfc461cde9be640d1c40593601ee77c41cdea7a54b33dbd332251fe518",
                          "typeString": "literal_string \"address blocked\""
                        }
                      ],
                      "id": 101077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1035:7:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:49:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101084,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:49:183"
                },
                {
                  "assignments": [
                    101086
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101086,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1102:5:183",
                      "nodeType": "VariableDeclaration",
                      "scope": 101098,
                      "src": "1094:13:183",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 101085,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1094:7:183",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101089,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101087,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35452,
                      "src": "1110:10:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 101088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:12:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1094:28:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101091,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101086,
                        "src": "1142:5:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101092,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101064,
                        "src": "1149:2:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101093,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101066,
                        "src": "1153:6:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101090,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33362,
                      "src": "1132:9:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:28:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101095,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:28:183"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 101096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1177:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 101071,
                  "id": 101097,
                  "nodeType": "Return",
                  "src": "1170:11:183"
                }
              ]
            },
            "baseFunctions": [
              33139
            ],
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "897:8:183",
            "overrides": {
              "id": 101068,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "938:8:183"
            },
            "parameters": {
              "id": 101067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101064,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "914:2:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101099,
                  "src": "906:10:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101066,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "923:6:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101099,
                  "src": "918:11:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101065,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:25:183"
            },
            "returnParameters": {
              "id": 101071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101099,
                  "src": "956:4:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101069,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "955:6:183"
            },
            "scope": 101145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101144,
            "nodeType": "FunctionDefinition",
            "src": "1194:395:183",
            "nodes": [],
            "body": {
              "id": 101143,
              "nodeType": "Block",
              "src": "1314:275:183",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 101111,
                    "name": "returnFalse",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100979,
                    "src": "1328:11:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101115,
                  "nodeType": "IfStatement",
                  "src": "1324:54:183",
                  "trueBody": {
                    "id": 101114,
                    "nodeType": "Block",
                    "src": "1341:37:183",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 101112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1362:5:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 101110,
                        "id": 101113,
                        "nodeType": "Return",
                        "src": "1355:12:183"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1395:21:183",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 101118,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101103,
                              "src": "1413:2:183",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 101117,
                            "name": "isBlockedAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101062,
                            "src": "1396:16:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 101119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1396:20:183",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6164647265737320626c6f636b6564",
                        "id": 101121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:17:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f2eedbfc461cde9be640d1c40593601ee77c41cdea7a54b33dbd332251fe518",
                          "typeString": "literal_string \"address blocked\""
                        },
                        "value": "address blocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f2eedbfc461cde9be640d1c40593601ee77c41cdea7a54b33dbd332251fe518",
                          "typeString": "literal_string \"address blocked\""
                        }
                      ],
                      "id": 101116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1387:7:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1387:49:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101123,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:49:183"
                },
                {
                  "assignments": [
                    101125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101125,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1454:7:183",
                      "nodeType": "VariableDeclaration",
                      "scope": 101143,
                      "src": "1446:15:183",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 101124,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1446:7:183",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101128,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101126,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35452,
                      "src": "1464:10:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 101127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:12:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1446:30:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101130,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101101,
                        "src": "1502:4:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101131,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101125,
                        "src": "1508:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101132,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101105,
                        "src": "1517:6:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101129,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33579,
                      "src": "1486:15:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1486:38:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101134,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:38:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101136,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101101,
                        "src": "1544:4:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101137,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101103,
                        "src": "1550:2:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101138,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101105,
                        "src": "1554:6:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101135,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33362,
                      "src": "1534:9:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:27:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101140,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:27:183"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 101141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1578:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 101110,
                  "id": 101142,
                  "nodeType": "Return",
                  "src": "1571:11:183"
                }
              ]
            },
            "baseFunctions": [
              33215
            ],
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1203:12:183",
            "overrides": {
              "id": 101107,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1278:8:183"
            },
            "parameters": {
              "id": 101106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101101,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1224:4:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101144,
                  "src": "1216:12:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101103,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1238:2:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101144,
                  "src": "1230:10:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101105,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1247:6:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 101144,
                  "src": "1242:11:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1215:39:183"
            },
            "returnParameters": {
              "id": 101110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101144,
                  "src": "1304:4:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1303:6:183"
            },
            "scope": 101145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100972,
              "name": "ERC20",
              "nameLocations": [
                "139:5:183"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33602,
              "src": "139:5:183"
            },
            "id": 100973,
            "nodeType": "InheritanceSpecifier",
            "src": "139:5:183"
          }
        ],
        "canonicalName": "ERC20Mock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          101145,
          33602,
          33705,
          33680,
          35462
        ],
        "name": "ERC20Mock",
        "nameLocation": "126:9:183",
        "scope": 101146,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 183
}